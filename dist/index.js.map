{"version":3,"sources":["../index.js"],"names":["DingRobot","accessToken","cb","robot","atUsers","isAtAll","prototype","reset","_send","data","shouldAt","msgtype","at","atMobiles","_data","send","text","msg","content","markdown","title","md","link","picUrl","msgUrl","messageUrl","userIds","Array","isArray","actionCard","btn","options","btnOrientation","hideAvatar","btns","length","singleTitle","singleURL","actionURL","atAll","module","exports"],"mappings":"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","file":"index.js","sourcesContent":["/**\n * Created by hustcc.\n * Contract: i@hust.cc\n */\n\nimport sender from 'dingtalk-robot';\n\nfunction DingRobot (accessToken, cb) {\n  this.robot = sender(accessToken);\n  this.cb = cb || function () {};\n\n  this.atUsers = [];\n  this.isAtAll = false;\n}\n\n/**\n * 重置\n */\nDingRobot.prototype.reset = function () {\n  this.atUsers = [];\n  this.isAtAll = false;\n  return this;\n};\n\nDingRobot.prototype._send = function (data) {\n  // reset\n  const shouldAt = data.msgtype === 'text' || data.msgtype === 'markdown';\n  const at = shouldAt ? {\n    at: {\n      atMobiles: this.atUsers,\n      isAtAll: this.isAtAll\n    }\n  } : {}\n  const _data = {\n    ...data, ...at\n  }\n  this.robot.send(_data, this.cb); // send by http\n  this.reset();\n  return this;\n};\n\n/**\n * 发送文本\n * @param msg\n */\nDingRobot.prototype.text = function (msg) {\n  return this._send({\n    msgtype: 'text',\n    text: {\n      content: msg\n    }\n  });\n};\n\n/**\n * 发送 markdown 文本\n * @param title\n * @param md\n * @returns {*}\n */\nDingRobot.prototype.markdown = function (title, md) {\n  return this._send({\n    msgtype: 'markdown',\n    markdown: {\n      title: title,\n      text: md\n    }\n  });\n};\n\n/**\n * 发送链接\n * @param title\n * @param text\n * @param picUrl\n * @param msgUrl\n * @returns {*|string|{title, text, picUrl, messageUrl}}\n */\nDingRobot.prototype.link = function (title, text, picUrl, msgUrl) {\n  return this._send({\n    msgtype: 'link',\n    link: {\n      title: title,\n      text: text,\n      picUrl: picUrl,\n      messageUrl: msgUrl\n    }\n  });\n};\n\n/**\n * @ 每一个人\n * @param userIds\n */\nDingRobot.prototype.at = function (userIds) {\n  this.atUsers = Array.isArray(userIds) ? userIds : [userIds];\n  return this;\n};\n\n/**\n * 发送 ActionCard 消息\n * @param title 首屏会话透出的展示内容\n * @param text  markdown格式的消息\n * @param btn   按钮(组): { title: string, actionURL: string } 或 Array<{title: string, actionURL: string }>\n * @param options 消息样式 { btnOrientation: '0' || '1' 0-按钮竖直排列，1-按钮横向排列,  hideAvatar: '0' || '1' 0-正常发消息者头像,1-隐藏发消息者头像 }\n */\nDingRobot.prototype.actionCard = function (title, text, btn = [], options = {}) {\n  const { btnOrientation = '0', hideAvatar = '0' } = options\n  let actionCard = {\n    title,\n    text,\n    btnOrientation: `${btnOrientation}`,\n    hideAvatar: `${hideAvatar}`\n  };\n  const btns = Array.isArray(btn) ? btn : [btn];\n  if (btns.length === 1) {\n    actionCard = { ...actionCard, singleTitle: btn.title, singleURL: btn.actionURL };\n  } else {\n    actionCard = { ...actionCard, btns: btns };\n  }\n  this._send({ msgtype: 'actionCard', actionCard });\n};\n\n/**\n * @ 所有人\n * @param isAtAll\n */\nDingRobot.prototype.atAll = function (isAtAll) {\n  this.isAtAll = isAtAll;\n  return this;\n};\n\nmodule.exports = DingRobot\n"]}